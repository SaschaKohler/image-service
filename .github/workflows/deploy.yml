# .github/workflows/deploy.yml
name: Regular Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Check Initial Setup Status
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if [ ! -f "/opt/image-service/.initial-setup-complete" ]; then
              echo "Initial setup has not been performed yet!"
              exit 1
            fi

      - name: Deploy Updates and Run Migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/image-service

            # Backup database before any changes
            timestamp=$(date +%Y%m%d_%H%M%S)
            sudo -u www-data cp src/templates.db "src/templates.db.backup_${timestamp}"

            # Pull latest changes
            sudo -u www-data git pull origin main

            # Install dependencies if package.json changed
            if git diff --quiet HEAD@{1} HEAD -- package.json; then
              echo "No changes in package.json, skipping npm install"
            else
              echo "Changes detected in package.json, running npm install"
              sudo -u www-data npm install --no-fund --no-audit  # Removed --production
            fi

            # Build CSS
            echo "Building CSS with Tailwind..."
            sudo -u www-data npm run build:css


            # Run database migrations
            echo "Running database migrations..."
            sudo -u www-data npm run db:migrate

            # Gracefully reload the service
            sudo -u www-data PM2_HOME=/var/www/.pm2 pm2 reload image-service
